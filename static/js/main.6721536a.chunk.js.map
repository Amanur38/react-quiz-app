{"version":3,"sources":["Lib/Constants.js","Lib/AuthService.js","Components/AuthRouter.js","Components/Login.js","Components/Common/NavBar.js","Components/Common/NotPermit.js","Components/Questions/AddQuestion.js","Components/Answers/Answer.js","App.js","reportWebVitals.js","index.js"],"names":["USER_ROLE","USER_ANSWER","QUESTION_LIST","USER_SCORE","USERS","userType","userName","password","localStorage","window","AuthService","userRole","getItem","Constants","removeItem","location","reload","PrivateRoute","Component","component","rest","isLoggedIn","render","props","to","pathname","RedirectLoggedIn","Login","useState","isError","allValues","setAllValues","onChangeFormValue","e","target","name","value","Container","Row","className","Col","md","Form","onSubmit","preventDefault","findUser","filter","user","length","setItem","JSON","stringify","Label","Group","controlId","Control","onChange","type","placeholder","list","Button","variant","id","NavBar","parse","isAdmin","href","onClick","doLogout","NotPermit","Card","style","width","Body","Title","Text","AddQuestion","initStateQuestionWithOptions","question","optionOne","optionTwo","optionThree","questionWithOptions","setQuestionWithOptions","correctAnswer","setCorrectAnswer","a","isValid","questionList","Date","now","questionText","options","text","isCorrect","parsedQuestions","push","undefined","method","htmlFor","required","event","xs","Check","label","AnswersItem","userAnswers","questions","setQuestions","answers","setAnswer","useEffect","sort","b","map","item","index","userAnswerParsed","selectedAnswer","find","element","option","i","disabled","defaultChecked","answer","App","exact","path","Answer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6721536a.chunk.js","sourcesContent":["export default {\r\n  // local storage keys\r\n  USER_ROLE:     \"userType\",\r\n  USER_ANSWER:   \"userAnswer\",\r\n  QUESTION_LIST: \"questionList\",\r\n  USER_SCORE:    \"userScore\",\r\n\r\n  // User list\r\n  USERS: [\r\n    {\r\n      userType: \"Admin\",\r\n      userName: \"Admin\",\r\n      password: \"123123\",\r\n    },\r\n    {\r\n      userType: \"User\",\r\n      userName: \"User\",\r\n      password: \"123456\",\r\n    },\r\n  ],\r\n};\r\n","import Constants from \"./Constants\";\r\nconst localStorage = window.localStorage;\r\n\r\nexport default class AuthService {\r\n  static isLoggedIn() {\r\n    const userRole = localStorage.getItem(Constants.USER_ROLE);\r\n    if (userRole === null) {\r\n      return false;\r\n    }\r\n    return !!(userRole && userRole !== \"\");\r\n  }\r\n\r\n  static doLogout() {\r\n    localStorage.removeItem(Constants.USER_ROLE);\r\n    window.location.reload(true);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthService from \"../Lib/AuthService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst RedirectLoggedIn = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PrivateRoute, RedirectLoggedIn };\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Constants from \"../Lib/Constants\";\r\n\r\nconst Login = () => {\r\n  const [allValues, setAllValues] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  const onChangeFormValue = (e) => {\r\n    setAllValues({\r\n      ...allValues,\r\n      [e.target.name]: e.target.value,\r\n      isError: false,\r\n    });\r\n  };\r\n\r\n  const onSubmitLoginForm = (e) => {\r\n    e.preventDefault();\r\n    const findUser = Constants.USERS.filter((user) => {\r\n      return user.userName === allValues.userName;\r\n    });\r\n\r\n    if (findUser.length > 0) {\r\n      if (findUser[0].password === allValues.password) {\r\n        delete findUser[0].password;\r\n        window.localStorage.setItem(\r\n          Constants.USER_ROLE,\r\n          JSON.stringify(findUser[0])\r\n        );\r\n        window.location.reload(true);\r\n      } else {\r\n        setAllValues({ ...allValues, isError: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6} className=\"mt-4 text-align-left\">\r\n          {allValues.isError ? (\r\n            <p className=\"alert alert-danger\">Invalid login credentials</p>\r\n          ) : null}\r\n          <Form onSubmit={onSubmitLoginForm}>\r\n            <Form.Label className=\"header-text\">Login</Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control\r\n                name=\"userName\"\r\n                onChange={onChangeFormValue}\r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                list=\"userNameList\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                onChange={onChangeFormValue}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-center m-4\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* Input fields datalist for easier to select user and password */}\r\n      <datalist id=\"userNameList\">\r\n        <option value={Constants.USERS[0].userName}/>\r\n        <option value={Constants.USERS[1].userName}/>\r\n      </datalist>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport AuthService from \"../../Lib/AuthService\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\n\r\nconst NavBar = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const isAdmin = userRole.userType === Constants.USERS[0].userType;\r\n\r\n  return (\r\n    <ul className=\"nav justify-content-center\">\r\n      {isAdmin ? (\r\n        <>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"add-question\">\r\n              Add Question\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/answer\">\r\n              Answer\r\n            </a>\r\n          </li>\r\n        </>\r\n      ) : null}\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/\">\r\n          {isAdmin ? 'Questions' : \"Quiz\"}\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\">Hi {userRole.userName}</Button>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\" onClick={() => AuthService.doLogout()}>\r\n          Logout\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst NotPermit = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-4\">\r\n      <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>Access denied</Card.Title>\r\n          <Card.Text>\r\n            You don't have a permission to access this page.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotPermit;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AddQuestion = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n\r\n  const initStateQuestionWithOptions = {\r\n    question: \"\",\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n    optionThree: \"\",\r\n  };\r\n\r\n  const [questionWithOptions, setQuestionWithOptions] = useState(\r\n    initStateQuestionWithOptions\r\n  );\r\n\r\n  const [correctAnswer, setCorrectAnswer] = useState({\r\n    optionOne: false,\r\n    optionTwo: false,\r\n    optionThree: false,\r\n  });\r\n\r\n  const AddQuestion = async (e) => {\r\n    if (\r\n      isValid(questionWithOptions.question) &&\r\n      isValid(questionWithOptions.optionOne) &&\r\n      isValid(questionWithOptions.optionTwo) &&\r\n      isValid(questionWithOptions.optionThree) &&\r\n      (correctAnswer.optionOne ||\r\n        correctAnswer.optionTwo ||\r\n        correctAnswer.optionThree)\r\n    ) {\r\n      e.preventDefault();\r\n      let questionList = window.localStorage.getItem(Constants.QUESTION_LIST);\r\n      let id = Date.now();\r\n      const question = {\r\n        id: id,\r\n        questionText: questionWithOptions.question,\r\n        options: [\r\n          {\r\n            text: questionWithOptions.optionOne,\r\n            isCorrect: correctAnswer.optionOne,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionTwo,\r\n            isCorrect: correctAnswer.optionTwo,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionThree,\r\n            isCorrect: correctAnswer.optionThree,\r\n          },\r\n        ],\r\n      };\r\n      let parsedQuestions = JSON.parse(questionList);\r\n      parsedQuestions.push(question);\r\n      localStorage.setItem(\r\n        Constants.QUESTION_LIST,\r\n        JSON.stringify(parsedQuestions)\r\n      );\r\n      setQuestionWithOptions(initStateQuestionWithOptions);\r\n    }\r\n  };\r\n\r\n  function isValid(value) {\r\n    return value !== \"\" && value !== null && value !== undefined;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      <div className=\"text-center m-3, pt-4 pb-4\">\r\n        <h5>You can add a question for users by submit the below form.</h5>\r\n      </div>\r\n      <Row className=\"justify-content-center\">\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col md={6}>\r\n            <Form method=\"post\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\">\r\n                    Input your question\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Ex: What is react?\"\r\n                    value={questionWithOptions.question || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({ question: event.target.value })\r\n                    }\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option one\"\r\n                    value={questionWithOptions.optionOne || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionOne: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: true,\r\n                        optionTwo: false,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option two\"\r\n                    value={questionWithOptions.optionTwo || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionTwo: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: true,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option three\"\r\n                    value={questionWithOptions.optionThree || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionThree: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: false,\r\n                        optionThree: true,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"d-flex justify-content-center m-4\">\r\n                <Button onClick={AddQuestion} variant=\"primary\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AnswersItem = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const userAnswers = localStorage.getItem(Constants.USER_ANSWER);\r\n  let questionList = localStorage.getItem(Constants.QUESTION_LIST);\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [answers, setAnswer] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (questionList) {\r\n      setQuestions(JSON.parse(questionList));\r\n    }\r\n    if (userAnswers) {\r\n      setAnswer(JSON.parse(userAnswers));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"justify-content-left\">\r\n      <NavBar />\r\n      <Row>\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col>\r\n            {questions.length > 0 && answers.length > 0 ? (\r\n              <form>\r\n                {questions\r\n                  .sort((a, b) => {\r\n                    // Sort by descending order\r\n                    return b.id - a.id;\r\n                  })\r\n                  .map((item, index) => {\r\n                    let userAnswerParsed =\r\n                      userAnswers && JSON.parse(userAnswers);\r\n                    let selectedAnswer = undefined;\r\n                    if (userAnswerParsed) {\r\n                      selectedAnswer = userAnswerParsed.find(\r\n                        (element) => element.id === item.id\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={index} className=\"card m-2 p-4\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <h2>{item.questionText}</h2>\r\n                        </div>\r\n                        {item.options.map((option, i) => {\r\n                          return (\r\n                            <div key={i} className=\"question-option\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={item.questionText}\r\n                                name={item.questionText}\r\n                                value={`${option.text}`}\r\n                                disabled\r\n                                required\r\n                                defaultChecked={\r\n                                  selectedAnswer &&\r\n                                  option.text === selectedAnswer.answer.text\r\n                                }\r\n                              />{\" \"}\r\n                              {option.text}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </form>\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No answers found.</h4>\r\n            )}\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AnswersItem;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {PrivateRoute, RedirectLoggedIn} from \"./Components/AuthRouter\";\n\nimport Login from './Components/Login';\nimport Questions from './Components/Questions';\nimport AddQuestion from './Components/Questions/AddQuestion';\nimport Answer from './Components/Answers/Answer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/\" component={Login}></Route>\n        <RedirectLoggedIn exact path=\"/login\" component={Login}/>\n        {/* <PrivateRoute exact path=\"/\" component={Questions}/> */}\n        <PrivateRoute exact path=\"/add-question\" component={AddQuestion}/>\n        <PrivateRoute exact path=\"/answer\" component={Answer}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}