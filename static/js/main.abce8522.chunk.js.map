{"version":3,"sources":["Lib/Constants.js","Lib/AuthService.js","Components/AuthRouter.js","Components/Login.js","Components/Questions/QuestionEditModal.js","Components/Questions/QuestionsItem.js","Components/Common/NavBar.js","Components/Questions/index.js","Components/Common/NotPermit.js","Components/Questions/AddQuestion.js","Components/Answers/Answer.js","App.js","reportWebVitals.js","index.js"],"names":["USER_ROLE","USER_ANSWER","QUESTION_LIST","USER_SCORE","USERS","userType","userName","password","localStorage","window","AuthService","userRole","getItem","Constants","removeItem","location","reload","PrivateRoute","Component","component","rest","isLoggedIn","render","props","to","pathname","RedirectLoggedIn","Login","useState","isError","allValues","setAllValues","onChangeFormValue","e","target","name","value","Container","Row","className","Col","md","Form","onSubmit","preventDefault","findUser","filter","user","length","setItem","JSON","stringify","Label","Group","controlId","Control","onChange","type","placeholder","list","Button","variant","id","EditQuestion","question","optionOne","optionTwo","optionThree","questionWithOptions","setQuestionWithOptions","correctAnswer","setCorrectAnswer","useEffect","payload","questionText","options","text","isCorrect","a","isValid","questionList","console","log","Date","now","parsedQuestions","parse","i","splice","push","alert","undefined","Modal","show","isShow","onHide","onClick","backdrop","keyboard","Header","closeButton","Title","Body","method","htmlFor","required","event","xs","Check","label","checked","Footer","QuestionsItem","userAnswers","Questions","questions","setQuestions","answers","setAnswer","scores","setScores","showScore","setShowScore","showEditModal","setShowEditModal","editData","setEditData","selectAnswer","answerObject","answer","prevAnswer","Card","style","width","Text","some","correctAnswers","sort","b","map","item","index","userAnswerParsed","selectedAnswer","find","element","deleteQuestion","option","defaultChecked","QuestionEditModal","NavBar","isAdmin","href","doLogout","NotPermit","AddQuestion","initStateQuestionWithOptions","AnswersItem","disabled","App","basename","exact","path","Answer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abce8522.chunk.js","sourcesContent":["export default {\r\n  // local storage keys\r\n  USER_ROLE:     \"userType\",\r\n  USER_ANSWER:   \"userAnswer\",\r\n  QUESTION_LIST: \"questionList\",\r\n  USER_SCORE:    \"userScore\",\r\n\r\n  // User list\r\n  USERS: [\r\n    {\r\n      userType: \"Admin\",\r\n      userName: \"Admin\",\r\n      password: \"123123\",\r\n    },\r\n    {\r\n      userType: \"User\",\r\n      userName: \"User\",\r\n      password: \"123456\",\r\n    },\r\n  ],\r\n};\r\n","import Constants from \"./Constants\";\r\nconst localStorage = window.localStorage;\r\n\r\nexport default class AuthService {\r\n  static isLoggedIn() {\r\n    const userRole = localStorage.getItem(Constants.USER_ROLE);\r\n    if (userRole === null) {\r\n      return false;\r\n    }\r\n    return !!(userRole && userRole !== \"\");\r\n  }\r\n\r\n  static doLogout() {\r\n    localStorage.removeItem(Constants.USER_ROLE);\r\n    window.location.reload(true);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthService from \"../Lib/AuthService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst RedirectLoggedIn = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PrivateRoute, RedirectLoggedIn };\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Constants from \"../Lib/Constants\";\r\n\r\nconst Login = () => {\r\n  const [allValues, setAllValues] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  const onChangeFormValue = (e) => {\r\n    setAllValues({\r\n      ...allValues,\r\n      [e.target.name]: e.target.value,\r\n      isError: false,\r\n    });\r\n  };\r\n\r\n  const onSubmitLoginForm = (e) => {\r\n    e.preventDefault();\r\n    const findUser = Constants.USERS.filter((user) => {\r\n      return user.userName === allValues.userName;\r\n    });\r\n\r\n    if (findUser.length > 0) {\r\n      if (findUser[0].password === allValues.password) {\r\n        delete findUser[0].password;\r\n        window.localStorage.setItem(\r\n          Constants.USER_ROLE,\r\n          JSON.stringify(findUser[0])\r\n        );\r\n        window.location.reload(true);\r\n      } else {\r\n        setAllValues({ ...allValues, isError: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6} className=\"mt-4 text-align-left\">\r\n          {allValues.isError ? (\r\n            <p className=\"alert alert-danger\">Invalid login credentials</p>\r\n          ) : null}\r\n          <Form onSubmit={onSubmitLoginForm}>\r\n            <Form.Label className=\"header-text\">Login</Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control\r\n                name=\"userName\"\r\n                onChange={onChangeFormValue}\r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                list=\"userNameList\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                onChange={onChangeFormValue}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-center m-4\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* Input fields datalist for easier to select user and password */}\r\n      <datalist id=\"userNameList\">\r\n        <option value={Constants.USERS[0].userName}/>\r\n        <option value={Constants.USERS[1].userName}/>\r\n      </datalist>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\n\r\nconst EditQuestion = (props) => {\r\n  const initStateQuestionWithOptions = {\r\n    question: \"\",\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n    optionThree: \"\",\r\n  };\r\n\r\n  const [questionWithOptions, setQuestionWithOptions] = useState(\r\n    initStateQuestionWithOptions\r\n  );\r\n\r\n  const [correctAnswer, setCorrectAnswer] = useState({\r\n    optionOne: false,\r\n    optionTwo: false,\r\n    optionThree: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.payload) {\r\n      setQuestionWithOptions({\r\n        question: props.payload.questionText,\r\n        optionOne: props.payload.options[0].text,\r\n        optionTwo: props.payload.options[1].text,\r\n        optionThree: props.payload.options[2].text,\r\n      });\r\n\r\n      setCorrectAnswer({\r\n        optionOne: props.payload.options[0].isCorrect,\r\n        optionTwo: props.payload.options[1].isCorrect,\r\n        optionThree: props.payload.options[2].isCorrect,\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const EditQuestion = async (e) => {\r\n    if (\r\n      isValid(questionWithOptions.question) &&\r\n      isValid(questionWithOptions.optionOne) &&\r\n      isValid(questionWithOptions.optionTwo) &&\r\n      isValid(questionWithOptions.optionThree) &&\r\n      (correctAnswer.optionOne ||\r\n        correctAnswer.optionTwo ||\r\n        correctAnswer.optionThree)\r\n    ) {\r\n      e.preventDefault();\r\n      let questionList = window.localStorage.getItem(Constants.QUESTION_LIST);\r\n      console.log(\"🚀 ~ file: QuestionEditModal.js ~ line 62 ~ EditQuestion ~ questionList\", questionList)\r\n      let id = Date.now();\r\n      const question = {\r\n        id: props.payload.id,\r\n        questionText: questionWithOptions.question,\r\n        options: [\r\n          {\r\n            text: questionWithOptions.optionOne,\r\n            isCorrect: correctAnswer.optionOne,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionTwo,\r\n            isCorrect: correctAnswer.optionTwo,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionThree,\r\n            isCorrect: correctAnswer.optionThree,\r\n          },\r\n        ],\r\n      };\r\n      let parsedQuestions = JSON.parse(questionList);\r\n      for (var i = 0; i < parsedQuestions.length; i++) {\r\n        if (parsedQuestions[i].id === props.payload.id) {\r\n            parsedQuestions.splice(i, 1);\r\n        }\r\n      }\r\n      parsedQuestions.push(question);\r\n        localStorage.setItem(\r\n          Constants.QUESTION_LIST,\r\n          JSON.stringify(parsedQuestions)\r\n        );\r\n        if(!alert(\"The question updated successfully.\")) window.location.reload(true);\r\n    }\r\n  };\r\n\r\n  function isValid(value) {\r\n    return value !== \"\" && value !== null && value !== undefined;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onClick}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Question</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form method=\"post\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Label htmlFor=\"inlineFormInput\">\r\n                Input your question\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Ex: What is react?\"\r\n                value={questionWithOptions.question || \"\"}\r\n                required\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({ ...questionWithOptions, question: event.target.value })\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br></br>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option one\"\r\n                value={questionWithOptions.optionOne || \"\"}\r\n                required\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionOne: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                checked={correctAnswer.optionOne}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: true,\r\n                    optionTwo: false,\r\n                    optionThree: false,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option two\"\r\n                value={questionWithOptions.optionTwo || \"\"}\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionTwo: event.target.value,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                checked={correctAnswer.optionTwo}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: false,\r\n                    optionTwo: true,\r\n                    optionThree: false,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option three\"\r\n                value={questionWithOptions.optionThree || \"\"}\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionThree: event.target.value,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                required\r\n                checked={correctAnswer.optionThree}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: false,\r\n                    optionTwo: false,\r\n                    optionThree: true,\r\n                  })\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Modal.Footer className=\"justify-content-center\">\r\n            <Button variant=\"secondary\" onClick={props.onClick}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={EditQuestion}>\r\n              Submit\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport QuestionEditModal from \"./QuestionEditModal\";\r\n\r\nconst QuestionsItem = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n\r\n  const userAnswers =\r\n    userRole.userType === Constants.USERS[0].userType\r\n      ? null\r\n      : localStorage.getItem(Constants.USER_ANSWER);\r\n  let questionList = localStorage.getItem(Constants.QUESTION_LIST);\r\n\r\n  const Questions = [\r\n    {\r\n      id: 1629517146766,\r\n      questionText: \"What does HTML stand for?\",\r\n      options: [\r\n        { text: \"Hyperlinks and Text Markup Language1\", isCorrect: false },\r\n        { text: \" Home Tool Markup Language\", isCorrect: false },\r\n        { text: \" Hyper Text Markup Language\", isCorrect: true },\r\n      ],\r\n    },\r\n    {\r\n      id: 1629517158929,\r\n      questionText: \"Who is making the Web standards?\",\r\n      options: [\r\n        { text: \"Google\", isCorrect: false },\r\n        { text: \"The World Wide Web Consortium\", isCorrect: true },\r\n        { text: \"Facebook\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      id: 1629517194817,\r\n      questionText: \"Choose the correct HTML element for the largest heading:\",\r\n      options: [\r\n        { text: \"<heading>\", isCorrect: false },\r\n        { text: \"<h5>\", isCorrect: false },\r\n        { text: \"<h1>\", isCorrect: true },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [answers, setAnswer] = useState([]);\r\n  const [scores, setScores] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editData, setEditData] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (!questionList) {\r\n      window.localStorage.setItem(\r\n        Constants.QUESTION_LIST,\r\n        JSON.stringify(Questions)\r\n      );\r\n      setQuestions(Questions);\r\n    } else {\r\n      setQuestions(JSON.parse(questionList));\r\n    }\r\n    if (userAnswers) {\r\n      setAnswer(JSON.parse(userAnswers));\r\n    }\r\n  }, []);\r\n\r\n  const selectAnswer = async (id, selectAnswer) => {\r\n    let answerObject = {\r\n      id: id,\r\n      answer: selectAnswer,\r\n    };\r\n\r\n    for (var i = 0; i < answers.length; i++) {\r\n      if (answers[i].id === id) {\r\n        answers.splice(i, 1);\r\n      }\r\n    }\r\n    if (selectAnswer.isCorrect) {\r\n      setScores(scores + 1);\r\n    }\r\n    setAnswer((prevAnswer) => [...prevAnswer, answerObject]);\r\n  };\r\n\r\n  const submitAnswer = (e) => {\r\n    e.preventDefault();\r\n\r\n    questions.filter((question) => {\r\n      // filter out (!) items in answers\r\n      return !answers.some((answer) => {\r\n        return question.id === answer.id;\r\n      });\r\n    });\r\n\r\n    let correctAnswers = 0;\r\n\r\n    for (var ans of answers) {\r\n      if (ans.answer.isCorrect) correctAnswers += 1;\r\n    }\r\n    setScores(correctAnswers);\r\n    setShowScore(true);\r\n\r\n    localStorage.setItem(Constants.USER_ANSWER, JSON.stringify(answers));\r\n    localStorage.setItem(Constants.USER_SCORE, scores);\r\n  };\r\n\r\n  const editQuestion = (payload) => {\r\n    setEditData(payload);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const deleteQuestion = (id) => {\r\n    for (var i = 0; i < questions.length; i++) {\r\n      if (questions[i].id === id) {\r\n        if (!alert(\"Are you sure that you want to delete this question?\")) {\r\n          questions.splice(i, 1);\r\n          localStorage.setItem(\r\n            Constants.QUESTION_LIST,\r\n            JSON.stringify(questions)\r\n          );\r\n          window.location.reload(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const modalOpenClose = (e) => {\r\n    setShowEditModal(!showEditModal);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"justify-content-left\">\r\n      <Row>\r\n        {!showScore ? (\r\n          <Col>\r\n            {questions.length > 0 ? (\r\n              <form onSubmit={submitAnswer}>\r\n                {userRole.userType === Constants.USERS[1].userType ? (\r\n                  <p className=\"text-center m-4\">\r\n                    Please choose all the questions and submit. You can see your\r\n                    score. If you want to change your selected answer, you need\r\n                    to select the answer and submit.\r\n                  </p>\r\n                ) : null}\r\n                {questions\r\n                  .sort((a, b) => {\r\n                    // Sort by descending order\r\n                    return b.id - a.id;\r\n                  })\r\n                  .map((item, index) => {\r\n                    let userAnswerParsed =\r\n                      userAnswers && JSON.parse(userAnswers);\r\n                    let selectedAnswer = undefined;\r\n                    if (userAnswerParsed) {\r\n                      selectedAnswer = userAnswerParsed.find(\r\n                        (element) => element.id === item.id\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={index} className=\"card m-2 p-4\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <h2>{item.questionText}</h2>\r\n                          {userRole.userType === Constants.USERS[0].userType ? (\r\n                            <div className=\"button-wrapper\">\r\n                              <Button\r\n                                variant=\"info\"\r\n                                type=\"button\"\r\n                                onClick={() => editQuestion(item)}\r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"danger\"\r\n                                type=\"button\"\r\n                                onClick={() => deleteQuestion(item.id)}\r\n                              >\r\n                                Delete\r\n                              </Button>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                        {item.options.map((option, i) => {\r\n                          return (\r\n                            <div key={i} className=\"question-option\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={item.questionText}\r\n                                name={item.questionText}\r\n                                value={`${option.text}`}\r\n                                onClick={() => selectAnswer(item.id, option)}\r\n                                required\r\n                                defaultChecked={\r\n                                  selectedAnswer &&\r\n                                  option.text === selectedAnswer.answer.text\r\n                                }\r\n                              />{\" \"}\r\n                              {option.text}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex justify-content-center m-4\">\r\n                  {userRole.userType === Constants.USERS[1].userType ? (\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No question found.</h4>\r\n            )}\r\n          </Col>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center mt-4\">\r\n            <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>Your Scores</Card.Title>\r\n                <Card.Text>\r\n                  {scores} out of {questions.length}\r\n                </Card.Text>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={() => setShowScore(false)}\r\n                >\r\n                  Edit answers\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Row>\r\n      {editData ? (\r\n        <QuestionEditModal\r\n          payload={editData}\r\n          onClick={modalOpenClose}\r\n          isShow={showEditModal}\r\n        />\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuestionsItem;\r\n","import React from \"react\";\r\nimport AuthService from \"../../Lib/AuthService\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\n\r\nconst NavBar = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const isAdmin = userRole.userType === Constants.USERS[0].userType;\r\n\r\n  return (\r\n    <ul className=\"nav justify-content-center\">\r\n      {isAdmin ? (\r\n        <>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"add-question\">\r\n              Add Question\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/answer\">\r\n              Answer\r\n            </a>\r\n          </li>\r\n        </>\r\n      ) : null}\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/\">\r\n          {isAdmin ? 'Questions' : \"Quiz\"}\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\">Hi {userRole.userName}</Button>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\" onClick={() => AuthService.doLogout()}>\r\n          Logout\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport QuestionsItem from \"./QuestionsItem\";\r\nimport NavBar from '../Common/NavBar';\r\n\r\nconst Questions = () => {\r\n  return (\r\n    <Container className=\"justify-content-center\">\r\n      <NavBar/>\r\n      <QuestionsItem/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst NotPermit = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-4\">\r\n      <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>Access denied</Card.Title>\r\n          <Card.Text>\r\n            You don't have a permission to access this page.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotPermit;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AddQuestion = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n\r\n  const initStateQuestionWithOptions = {\r\n    question: \"\",\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n    optionThree: \"\",\r\n  };\r\n\r\n  const [questionWithOptions, setQuestionWithOptions] = useState(\r\n    initStateQuestionWithOptions\r\n  );\r\n\r\n  const [correctAnswer, setCorrectAnswer] = useState({\r\n    optionOne: false,\r\n    optionTwo: false,\r\n    optionThree: false,\r\n  });\r\n\r\n  const AddQuestion = async (e) => {\r\n    if (\r\n      isValid(questionWithOptions.question) &&\r\n      isValid(questionWithOptions.optionOne) &&\r\n      isValid(questionWithOptions.optionTwo) &&\r\n      isValid(questionWithOptions.optionThree) &&\r\n      (correctAnswer.optionOne ||\r\n        correctAnswer.optionTwo ||\r\n        correctAnswer.optionThree)\r\n    ) {\r\n      e.preventDefault();\r\n      let questionList = window.localStorage.getItem(Constants.QUESTION_LIST);\r\n      let id = Date.now();\r\n      const question = {\r\n        id: id,\r\n        questionText: questionWithOptions.question,\r\n        options: [\r\n          {\r\n            text: questionWithOptions.optionOne,\r\n            isCorrect: correctAnswer.optionOne,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionTwo,\r\n            isCorrect: correctAnswer.optionTwo,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionThree,\r\n            isCorrect: correctAnswer.optionThree,\r\n          },\r\n        ],\r\n      };\r\n      let parsedQuestions = JSON.parse(questionList);\r\n      parsedQuestions.push(question);\r\n      localStorage.setItem(\r\n        Constants.QUESTION_LIST,\r\n        JSON.stringify(parsedQuestions)\r\n      );\r\n      setQuestionWithOptions(initStateQuestionWithOptions);\r\n    }\r\n  };\r\n\r\n  function isValid(value) {\r\n    return value !== \"\" && value !== null && value !== undefined;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      <div className=\"text-center m-3, pt-4 pb-4\">\r\n        <h5>You can add a question for users by submit the below form.</h5>\r\n      </div>\r\n      <Row className=\"justify-content-center\">\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col md={6}>\r\n            <Form method=\"post\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\">\r\n                    Input your question\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Ex: What is react?\"\r\n                    value={questionWithOptions.question || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({ question: event.target.value })\r\n                    }\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option one\"\r\n                    value={questionWithOptions.optionOne || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionOne: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: true,\r\n                        optionTwo: false,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option two\"\r\n                    value={questionWithOptions.optionTwo || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionTwo: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: true,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option three\"\r\n                    value={questionWithOptions.optionThree || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionThree: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: false,\r\n                        optionThree: true,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"d-flex justify-content-center m-4\">\r\n                <Button onClick={AddQuestion} variant=\"primary\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AnswersItem = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const userAnswers = localStorage.getItem(Constants.USER_ANSWER);\r\n  let questionList = localStorage.getItem(Constants.QUESTION_LIST);\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [answers, setAnswer] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (questionList) {\r\n      setQuestions(JSON.parse(questionList));\r\n    }\r\n    if (userAnswers) {\r\n      setAnswer(JSON.parse(userAnswers));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"justify-content-left\">\r\n      <NavBar />\r\n      <Row>\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col>\r\n            {questions.length > 0 && answers.length > 0 ? (\r\n              <form>\r\n                {questions\r\n                  .sort((a, b) => {\r\n                    // Sort by descending order\r\n                    return b.id - a.id;\r\n                  })\r\n                  .map((item, index) => {\r\n                    let userAnswerParsed =\r\n                      userAnswers && JSON.parse(userAnswers);\r\n                    let selectedAnswer = undefined;\r\n                    if (userAnswerParsed) {\r\n                      selectedAnswer = userAnswerParsed.find(\r\n                        (element) => element.id === item.id\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={index} className=\"card m-2 p-4\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <h2>{item.questionText}</h2>\r\n                        </div>\r\n                        {item.options.map((option, i) => {\r\n                          return (\r\n                            <div key={i} className=\"question-option\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={item.questionText}\r\n                                name={item.questionText}\r\n                                value={`${option.text}`}\r\n                                disabled\r\n                                required\r\n                                defaultChecked={\r\n                                  selectedAnswer &&\r\n                                  option.text === selectedAnswer.answer.text\r\n                                }\r\n                              />{\" \"}\r\n                              {option.text}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </form>\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No answers found.</h4>\r\n            )}\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AnswersItem;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {PrivateRoute, RedirectLoggedIn} from \"./Components/AuthRouter\";\n\nimport Login from './Components/Login';\nimport Questions from './Components/Questions';\nimport AddQuestion from './Components/Questions/AddQuestion';\nimport Answer from './Components/Answers/Answer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/react-quiz-app\">\n        <RedirectLoggedIn exact path=\"/login\" component={Login}/>\n        <PrivateRoute exact path=\"/\" component={Questions}/>\n        <PrivateRoute exact path=\"/add-question\" component={AddQuestion}/>\n        <PrivateRoute exact path=\"/answer\" component={Answer}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}