{"version":3,"sources":["Lib/Constants.js","Lib/AuthService.js","Components/AuthRouter.js","Components/Login.js","Components/Questions/QuestionEditModal.js","Components/Questions/QuestionsItem.js","Components/Common/NavBar.js","Components/Questions/index.js","Components/Common/NotPermit.js","Components/Questions/AddQuestion.js","Components/Answers/Answer.js","App.js","reportWebVitals.js","index.js"],"names":["USER_ROLE","USER_ANSWER","QUESTION_LIST","USER_SCORE","USERS","userType","userName","password","localStorage","window","AuthService","userRole","getItem","Constants","removeItem","location","reload","PrivateRoute","Component","component","rest","isLoggedIn","render","props","to","pathname","RedirectLoggedIn","Login","useState","isError","allValues","setAllValues","onChangeFormValue","e","target","name","value","Container","Row","className","Col","md","Form","onSubmit","preventDefault","findUser","filter","user","length","setItem","JSON","stringify","Label","Group","controlId","Control","onChange","type","placeholder","list","required","Button","variant","id","EditQuestion","question","optionOne","optionTwo","optionThree","questionWithOptions","setQuestionWithOptions","correctAnswer","setCorrectAnswer","useEffect","payload","questionText","options","text","isCorrect","a","isValid","questionList","parsedQuestions","parse","i","splice","push","alert","undefined","Modal","show","isShow","onHide","onClick","backdrop","keyboard","Header","closeButton","Title","Body","method","htmlFor","event","xs","Check","label","checked","Footer","QuestionsItem","userAnswers","Questions","questions","setQuestions","answers","setAnswer","scores","setScores","showScore","setShowScore","showEditModal","setShowEditModal","editData","setEditData","selectAnswer","answerObject","answer","prevAnswer","Card","style","width","Text","some","correctAnswers","sort","b","map","item","index","userAnswerParsed","selectedAnswer","find","element","deleteQuestion","option","defaultChecked","QuestionEditModal","NavBar","isAdmin","doLogout","NotPermit","AddQuestion","initStateQuestionWithOptions","Date","now","AnswersItem","disabled","App","basename","exact","path","Answer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.019f4202.chunk.js","sourcesContent":["export default {\r\n  // local storage keys\r\n  USER_ROLE:     \"userType\",\r\n  USER_ANSWER:   \"userAnswer\",\r\n  QUESTION_LIST: \"questionList\",\r\n  USER_SCORE:    \"userScore\",\r\n\r\n  // User list\r\n  USERS: [\r\n    {\r\n      userType: \"Admin\",\r\n      userName: \"Admin\",\r\n      password: \"123123\",\r\n    },\r\n    {\r\n      userType: \"User\",\r\n      userName: \"User\",\r\n      password: \"123456\",\r\n    },\r\n  ],\r\n};\r\n","import Constants from \"./Constants\";\r\nconst localStorage = window.localStorage;\r\n\r\nexport default class AuthService {\r\n  static isLoggedIn() {\r\n    const userRole = localStorage.getItem(Constants.USER_ROLE);\r\n    if (userRole === null) {\r\n      return false;\r\n    }\r\n    return !!(userRole && userRole !== \"\");\r\n  }\r\n\r\n  static doLogout() {\r\n    localStorage.removeItem(Constants.USER_ROLE);\r\n    window.location.reload(true);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthService from \"../Lib/AuthService\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst RedirectLoggedIn = ({ component: Component, ...rest }) => {\r\n  let isLoggedIn = AuthService.isLoggedIn();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PrivateRoute, RedirectLoggedIn };\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Constants from \"../Lib/Constants\";\r\n\r\nconst Login = () => {\r\n  const [allValues, setAllValues] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  const onChangeFormValue = (e) => {\r\n    setAllValues({\r\n      ...allValues,\r\n      [e.target.name]: e.target.value,\r\n      isError: false,\r\n    });\r\n  };\r\n\r\n  const onSubmitLoginForm = (e) => {\r\n    if(allValues.userName !== \"\" && allValues.password !== \"\") e.preventDefault();\r\n    const findUser = Constants.USERS.filter((user) => {\r\n      return user.userName === allValues.userName;\r\n    });\r\n\r\n    if (findUser.length > 0) {\r\n      if (findUser[0].password === allValues.password) {\r\n        delete findUser[0].password;\r\n        window.localStorage.setItem(\r\n          Constants.USER_ROLE,\r\n          JSON.stringify(findUser[0])\r\n        );\r\n        window.location.reload(true);\r\n      } else {\r\n        setAllValues({ ...allValues, isError: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6} className=\"mt-4 text-align-left\">\r\n          <Form onSubmit={onSubmitLoginForm}>\r\n            <Form.Label className=\"header-text\">Login</Form.Label>\r\n            {allValues.isError ? (\r\n              <p className=\"alert alert-danger\">Invalid login credentials</p>\r\n            ) : null}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control\r\n                name=\"userName\"\r\n                onChange={onChangeFormValue}\r\n                type=\"text\"\r\n                placeholder=\"Enter user name\"\r\n                list=\"userNameList\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                onChange={onChangeFormValue}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-center m-4\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* Input fields datalist for easier to select user */}\r\n      <datalist id=\"userNameList\">\r\n        <option value={Constants.USERS[0].userName} />\r\n        <option value={Constants.USERS[1].userName} />\r\n      </datalist>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\n\r\nconst EditQuestion = (props) => {\r\n  const initStateQuestionWithOptions = {\r\n    question: \"\",\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n    optionThree: \"\",\r\n  };\r\n\r\n  const [questionWithOptions, setQuestionWithOptions] = useState(\r\n    initStateQuestionWithOptions\r\n  );\r\n\r\n  const [correctAnswer, setCorrectAnswer] = useState({\r\n    optionOne: false,\r\n    optionTwo: false,\r\n    optionThree: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.payload) {\r\n      setQuestionWithOptions({\r\n        question: props.payload.questionText,\r\n        optionOne: props.payload.options[0].text,\r\n        optionTwo: props.payload.options[1].text,\r\n        optionThree: props.payload.options[2].text,\r\n      });\r\n\r\n      setCorrectAnswer({\r\n        optionOne: props.payload.options[0].isCorrect,\r\n        optionTwo: props.payload.options[1].isCorrect,\r\n        optionThree: props.payload.options[2].isCorrect,\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const EditQuestion = async (e) => {\r\n    if (\r\n      isValid(questionWithOptions.question) &&\r\n      isValid(questionWithOptions.optionOne) &&\r\n      isValid(questionWithOptions.optionTwo) &&\r\n      isValid(questionWithOptions.optionThree) &&\r\n      (correctAnswer.optionOne ||\r\n        correctAnswer.optionTwo ||\r\n        correctAnswer.optionThree)\r\n    ) {\r\n      e.preventDefault();\r\n      let questionList = window.localStorage.getItem(Constants.QUESTION_LIST);\r\n      const question = {\r\n        id: props.payload.id,\r\n        questionText: questionWithOptions.question,\r\n        options: [\r\n          {\r\n            text: questionWithOptions.optionOne,\r\n            isCorrect: correctAnswer.optionOne,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionTwo,\r\n            isCorrect: correctAnswer.optionTwo,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionThree,\r\n            isCorrect: correctAnswer.optionThree,\r\n          },\r\n        ],\r\n      };\r\n      let parsedQuestions = JSON.parse(questionList);\r\n      for (var i = 0; i < parsedQuestions.length; i++) {\r\n        if (parsedQuestions[i].id === props.payload.id) {\r\n            parsedQuestions.splice(i, 1);\r\n        }\r\n      }\r\n      parsedQuestions.push(question);\r\n        localStorage.setItem(\r\n          Constants.QUESTION_LIST,\r\n          JSON.stringify(parsedQuestions)\r\n        );\r\n        if(!alert(\"The question updated successfully.\")) window.location.reload(true);\r\n    }\r\n  };\r\n\r\n  function isValid(value) {\r\n    return value !== \"\" && value !== null && value !== undefined;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.isShow}\r\n      onHide={props.onClick}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Question</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form method=\"post\">\r\n          <Row>\r\n            <Col>\r\n              <Form.Label htmlFor=\"inlineFormInput\">\r\n                Input your question\r\n              </Form.Label>\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Ex: What is react?\"\r\n                value={questionWithOptions.question || \"\"}\r\n                required\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({ ...questionWithOptions, question: event.target.value })\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br></br>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option one\"\r\n                value={questionWithOptions.optionOne || \"\"}\r\n                required\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionOne: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                checked={correctAnswer.optionOne}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: true,\r\n                    optionTwo: false,\r\n                    optionThree: false,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option two\"\r\n                value={questionWithOptions.optionTwo || \"\"}\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionTwo: event.target.value,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                checked={correctAnswer.optionTwo}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: false,\r\n                    optionTwo: true,\r\n                    optionThree: false,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"align-items-center\">\r\n            <Col xs=\"auto\">\r\n              <Form.Control\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Option three\"\r\n                value={questionWithOptions.optionThree || \"\"}\r\n                onChange={(event) =>\r\n                  setQuestionWithOptions({\r\n                    ...questionWithOptions,\r\n                    optionThree: event.target.value,\r\n                  })\r\n                }\r\n                required\r\n              />\r\n            </Col>\r\n            <Col xs=\"auto\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                id=\"autoSizingCheck\"\r\n                className=\"mb-2\"\r\n                label=\"Answer\"\r\n                name=\"option\"\r\n                required\r\n                checked={correctAnswer.optionThree}\r\n                onChange={() =>\r\n                  setCorrectAnswer({\r\n                    optionOne: false,\r\n                    optionTwo: false,\r\n                    optionThree: true,\r\n                  })\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Modal.Footer className=\"justify-content-center\">\r\n            <Button variant=\"secondary\" onClick={props.onClick}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={EditQuestion}>\r\n              Submit\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport QuestionEditModal from \"./QuestionEditModal\";\r\n\r\nconst QuestionsItem = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n\r\n  const userAnswers =\r\n    userRole.userType === Constants.USERS[0].userType\r\n      ? null\r\n      : localStorage.getItem(Constants.USER_ANSWER);\r\n  let questionList = localStorage.getItem(Constants.QUESTION_LIST);\r\n\r\n  const Questions = [\r\n    {\r\n      id: 1629517146766,\r\n      questionText: \"What does HTML stand for?\",\r\n      options: [\r\n        { text: \"Hyperlinks and Text Markup Language1\", isCorrect: false },\r\n        { text: \" Home Tool Markup Language\", isCorrect: false },\r\n        { text: \" Hyper Text Markup Language\", isCorrect: true },\r\n      ],\r\n    },\r\n    {\r\n      id: 1629517158929,\r\n      questionText: \"Who is making the Web standards?\",\r\n      options: [\r\n        { text: \"Google\", isCorrect: false },\r\n        { text: \"The World Wide Web Consortium\", isCorrect: true },\r\n        { text: \"Facebook\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      id: 1629517194817,\r\n      questionText: \"Choose the correct HTML element for the largest heading:\",\r\n      options: [\r\n        { text: \"<heading>\", isCorrect: false },\r\n        { text: \"<h5>\", isCorrect: false },\r\n        { text: \"<h1>\", isCorrect: true },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [answers, setAnswer] = useState([]);\r\n  const [scores, setScores] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editData, setEditData] = useState();\r\n\r\n  useEffect(async () => {\r\n    if (!questionList) {\r\n      window.localStorage.setItem(\r\n        Constants.QUESTION_LIST,\r\n        JSON.stringify(Questions)\r\n      );\r\n      setQuestions(Questions);\r\n    } else {\r\n      setQuestions(JSON.parse(questionList));\r\n    }\r\n    if (userAnswers) {\r\n      setAnswer(JSON.parse(userAnswers));\r\n    }\r\n  }, []);\r\n\r\n  const selectAnswer = async (id, selectAnswer) => {\r\n    let answerObject = {\r\n      id: id,\r\n      answer: selectAnswer,\r\n    };\r\n\r\n    for (var i = 0; i < answers.length; i++) {\r\n      if (answers[i].id === id) {\r\n        answers.splice(i, 1);\r\n      }\r\n    }\r\n    if (selectAnswer.isCorrect) {\r\n      setScores(scores + 1);\r\n    }\r\n    setAnswer((prevAnswer) => [...prevAnswer, answerObject]);\r\n  };\r\n\r\n  const submitAnswer = (e) => {\r\n    e.preventDefault();\r\n\r\n    questions.filter((question) => {\r\n      // filter out (!) items in answers\r\n      return !answers.some((answer) => {\r\n        return question.id === answer.id;\r\n      });\r\n    });\r\n\r\n    let correctAnswers = 0;\r\n\r\n    for (var ans of answers) {\r\n      if (ans.answer.isCorrect) correctAnswers += 1;\r\n    }\r\n    setScores(correctAnswers);\r\n    setShowScore(true);\r\n\r\n    localStorage.setItem(Constants.USER_ANSWER, JSON.stringify(answers));\r\n    localStorage.setItem(Constants.USER_SCORE, scores);\r\n  };\r\n\r\n  const editQuestion = (payload) => {\r\n    setEditData(payload);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const deleteQuestion = (id) => {\r\n    for (var i = 0; i < questions.length; i++) {\r\n      if (questions[i].id === id) {\r\n        if (!alert(\"Are you sure that you want to delete this question?\")) {\r\n          questions.splice(i, 1);\r\n          localStorage.setItem(\r\n            Constants.QUESTION_LIST,\r\n            JSON.stringify(questions)\r\n          );\r\n          window.location.reload(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const modalOpenClose = (e) => {\r\n    setShowEditModal(!showEditModal);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"justify-content-left\">\r\n      <Row>\r\n        {!showScore ? (\r\n          <Col>\r\n            {questions.length > 0 ? (\r\n              <form onSubmit={submitAnswer}>\r\n                {userRole.userType === Constants.USERS[1].userType ? (\r\n                  <p className=\"text-center m-4\">\r\n                    Please choose all the questions and submit. You can see your\r\n                    score. If you want to change your selected answer, you need\r\n                    to select the answer and submit.\r\n                  </p>\r\n                ) : null}\r\n                {questions\r\n                  .sort((a, b) => {\r\n                    // Sort by descending order\r\n                    return b.id - a.id;\r\n                  })\r\n                  .map((item, index) => {\r\n                    let userAnswerParsed =\r\n                      userAnswers && JSON.parse(userAnswers);\r\n                    let selectedAnswer = undefined;\r\n                    if (userAnswerParsed) {\r\n                      selectedAnswer = userAnswerParsed.find(\r\n                        (element) => element.id === item.id\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={index} className=\"card m-2 p-4\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <h2>{item.questionText}</h2>\r\n                          {userRole.userType === Constants.USERS[0].userType ? (\r\n                            <div className=\"button-wrapper\">\r\n                              <Button\r\n                                variant=\"info\"\r\n                                type=\"button\"\r\n                                onClick={() => editQuestion(item)}\r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"danger\"\r\n                                type=\"button\"\r\n                                onClick={() => deleteQuestion(item.id)}\r\n                              >\r\n                                Delete\r\n                              </Button>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                        {item.options.map((option, i) => {\r\n                          return (\r\n                            <div key={i} className=\"question-option\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={item.questionText}\r\n                                name={item.questionText}\r\n                                value={`${option.text}`}\r\n                                onClick={() => selectAnswer(item.id, option)}\r\n                                required\r\n                                defaultChecked={\r\n                                  selectedAnswer &&\r\n                                  option.text === selectedAnswer.answer.text\r\n                                }\r\n                              />{\" \"}\r\n                              {option.text}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex justify-content-center m-4\">\r\n                  {userRole.userType === Constants.USERS[1].userType ? (\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No question found.</h4>\r\n            )}\r\n          </Col>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center mt-4\">\r\n            <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n              <Card.Body>\r\n                <Card.Title>Your Scores</Card.Title>\r\n                <Card.Text>\r\n                  {scores} out of {questions.length}\r\n                </Card.Text>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={() => setShowScore(false)}\r\n                >\r\n                  Edit answers\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </Row>\r\n      {editData ? (\r\n        <QuestionEditModal\r\n          payload={editData}\r\n          onClick={modalOpenClose}\r\n          isShow={showEditModal}\r\n        />\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuestionsItem;\r\n","import React from \"react\";\r\nimport AuthService from \"../../Lib/AuthService\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const isAdmin = userRole.userType === Constants.USERS[0].userType;\r\n\r\n  return (\r\n    <ul className=\"nav justify-content-center\">\r\n      {isAdmin ? (\r\n        <>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" to=\"/add-question\">\r\n              Add Question\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/answer\">\r\n              Answer\r\n            </Link>\r\n          </li>\r\n        </>\r\n      ) : null}\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/\">\r\n          {isAdmin ? 'Questions' : \"Quiz\"}\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\">Hi {userRole.userName}</Button>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Button variant=\"light\" onClick={() => AuthService.doLogout()}>\r\n          Logout\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport QuestionsItem from \"./QuestionsItem\";\r\nimport NavBar from '../Common/NavBar';\r\n\r\nconst Questions = () => {\r\n  return (\r\n    <Container className=\"justify-content-center\">\r\n      <NavBar/>\r\n      <QuestionsItem/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst NotPermit = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-4\">\r\n      <Card className=\"text-center\" style={{ width: \"20rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>Access denied</Card.Title>\r\n          <Card.Text>\r\n            You don't have a permission to access this page.\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotPermit;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AddQuestion = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n\r\n  const initStateQuestionWithOptions = {\r\n    question: \"\",\r\n    optionOne: \"\",\r\n    optionTwo: \"\",\r\n    optionThree: \"\",\r\n  };\r\n\r\n  const [questionWithOptions, setQuestionWithOptions] = useState(\r\n    initStateQuestionWithOptions\r\n  );\r\n\r\n  const [correctAnswer, setCorrectAnswer] = useState({\r\n    optionOne: false,\r\n    optionTwo: false,\r\n    optionThree: false,\r\n  });\r\n\r\n  const AddQuestion = async (e) => {\r\n    if (\r\n      isValid(questionWithOptions.question) &&\r\n      isValid(questionWithOptions.optionOne) &&\r\n      isValid(questionWithOptions.optionTwo) &&\r\n      isValid(questionWithOptions.optionThree) &&\r\n      (correctAnswer.optionOne ||\r\n        correctAnswer.optionTwo ||\r\n        correctAnswer.optionThree)\r\n    ) {\r\n      e.preventDefault();\r\n      let questionList = window.localStorage.getItem(Constants.QUESTION_LIST);\r\n      let id = Date.now();\r\n      const question = {\r\n        id: id,\r\n        questionText: questionWithOptions.question,\r\n        options: [\r\n          {\r\n            text: questionWithOptions.optionOne,\r\n            isCorrect: correctAnswer.optionOne,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionTwo,\r\n            isCorrect: correctAnswer.optionTwo,\r\n          },\r\n          {\r\n            text: questionWithOptions.optionThree,\r\n            isCorrect: correctAnswer.optionThree,\r\n          },\r\n        ],\r\n      };\r\n      let parsedQuestions = JSON.parse(questionList);\r\n      parsedQuestions.push(question);\r\n      localStorage.setItem(\r\n        Constants.QUESTION_LIST,\r\n        JSON.stringify(parsedQuestions)\r\n      );\r\n      setQuestionWithOptions(initStateQuestionWithOptions);\r\n    }\r\n  };\r\n\r\n  function isValid(value) {\r\n    return value !== \"\" && value !== null && value !== undefined;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      <div className=\"text-center m-3, pt-4 pb-4\">\r\n        <h5>You can add a question for users by submit the below form.</h5>\r\n      </div>\r\n      <Row className=\"justify-content-center\">\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col md={6}>\r\n            <Form method=\"post\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\">\r\n                    Input your question\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Ex: What is react?\"\r\n                    value={questionWithOptions.question || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({ question: event.target.value })\r\n                    }\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <br></br>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option one\"\r\n                    value={questionWithOptions.optionOne || \"\"}\r\n                    required\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionOne: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: true,\r\n                        optionTwo: false,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option two\"\r\n                    value={questionWithOptions.optionTwo || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionTwo: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: true,\r\n                        optionThree: false,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Option three\"\r\n                    value={questionWithOptions.optionThree || \"\"}\r\n                    onChange={(event) =>\r\n                      setQuestionWithOptions({\r\n                        ...questionWithOptions,\r\n                        optionThree: event.target.value,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"autoSizingCheck\"\r\n                    className=\"mb-2\"\r\n                    label=\"Answer\"\r\n                    name=\"option\"\r\n                    onChange={() =>\r\n                      setCorrectAnswer({\r\n                        optionOne: false,\r\n                        optionTwo: false,\r\n                        optionThree: true,\r\n                      })\r\n                    }\r\n                    required\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <div className=\"d-flex justify-content-center m-4\">\r\n                <Button onClick={AddQuestion} variant=\"primary\" type=\"submit\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport Constants from \"../../Lib/Constants\";\r\nimport NavBar from \"../Common/NavBar\";\r\nimport NotPermit from \"../Common/NotPermit\";\r\n\r\nconst AnswersItem = () => {\r\n  const userRole = JSON.parse(localStorage.getItem(Constants.USER_ROLE));\r\n  const userAnswers = localStorage.getItem(Constants.USER_ANSWER);\r\n  let questionList = localStorage.getItem(Constants.QUESTION_LIST);\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [answers, setAnswer] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (questionList) {\r\n      setQuestions(JSON.parse(questionList));\r\n    }\r\n    if (userAnswers) {\r\n      setAnswer(JSON.parse(userAnswers));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"justify-content-left\">\r\n      <NavBar />\r\n      <Row>\r\n        {userRole.userType === Constants.USERS[0].userType ? (\r\n          <Col>\r\n            {questions.length > 0 && answers.length > 0 ? (\r\n              <form>\r\n                {questions\r\n                  .sort((a, b) => {\r\n                    // Sort by descending order\r\n                    return b.id - a.id;\r\n                  })\r\n                  .map((item, index) => {\r\n                    let userAnswerParsed =\r\n                      userAnswers && JSON.parse(userAnswers);\r\n                    let selectedAnswer = undefined;\r\n                    if (userAnswerParsed) {\r\n                      selectedAnswer = userAnswerParsed.find(\r\n                        (element) => element.id === item.id\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={index} className=\"card m-2 p-4\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <h2>{item.questionText}</h2>\r\n                        </div>\r\n                        {item.options.map((option, i) => {\r\n                          return (\r\n                            <div key={i} className=\"question-option\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={item.questionText}\r\n                                name={item.questionText}\r\n                                value={`${option.text}`}\r\n                                disabled\r\n                                required\r\n                                defaultChecked={\r\n                                  selectedAnswer &&\r\n                                  option.text === selectedAnswer.answer.text\r\n                                }\r\n                              />{\" \"}\r\n                              {option.text}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </form>\r\n            ) : (\r\n              <h4 className=\"text-center mt-4\">No answers found.</h4>\r\n            )}\r\n          </Col>\r\n        ) : (\r\n          <NotPermit />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AnswersItem;\r\n","import React from 'react';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport {PrivateRoute, RedirectLoggedIn} from \"./Components/AuthRouter\";\n\nimport Login from './Components/Login';\nimport Questions from './Components/Questions';\nimport AddQuestion from './Components/Questions/AddQuestion';\nimport Answer from './Components/Answers/Answer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Github pages does not work too well with Browser router. That why I'm using HashRouter */}\n      <Router basename=\"/react-quiz-app\">\n        <RedirectLoggedIn exact path=\"/login\" component={Login}/>\n        <PrivateRoute exact path=\"/\" component={Questions}/>\n        <PrivateRoute exact path=\"/add-question\" component={AddQuestion}/>\n        <PrivateRoute exact path=\"/answer\" component={Answer}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}